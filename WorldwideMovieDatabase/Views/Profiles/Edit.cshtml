@model WorldwideMovieDatabase.Models.ProfileMoviesJobsViewModel

@{
    ViewBag.Title = "Edit";
}

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

<div class="form-horizontal">
    <h1>Edit Profile</h1>
    <hr />
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    @Html.HiddenFor(model => model.Profile.ID)

    <div class="form-group">
        @Html.LabelFor(model => model.Profile.Name, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Profile.Name, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Profile.Name, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Profile.BirthDate, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Profile.BirthDate, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Profile.BirthDate, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Profile.DeathDate, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Profile.DeathDate, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Profile.DeathDate, "", new { @class = "text-danger" })
        </div>
    </div>

    @if (Model.AllMovies.Count > 0)
    {
        <h2>Movies</h2>
        <hr />
    }

    @{
        int i = 0;
    }
    @foreach (var movie in Model.Profile.Movies.OrderBy(m => m.Movie.Title))
    {
        <input type="hidden" name="Profile.Movies[@i].Movie.ID" value="@movie.Movie.ID" />
        <input type="hidden" name="Profile.Movies[@i].Movie.Title" value="@movie.Movie.Title" />
        <h3>@movie.Movie.Title</h3>
        <div class="form-group">
            <div class="col-md-10">
                <ul>
                    @{
                        int j = 0;
                    }
                    @foreach (var job in movie.Jobs.OrderBy(jb => jb.Title))
                    {
                        <li>
                            <input type="hidden" name="Profile.Movies[@i].Jobs[@j].Title" value="@movie.Jobs[j].Title" />
                            <input type="hidden" name="Profile.Movies[@i].Jobs[@j].Id" value="@movie.Jobs[j].Id" />
                            @job.Title
                        </li>
                        j++;
                    }
                </ul>
            </div>
        </div>
        <br />
        i++;
    }

    <h2>Add Movies</h2>
    <hr />

    @*Returns AllMovies and AllJobs on postback so they get returned back to user if needed*@
    @{
        i = 0;
    }
    @foreach (var movie in Model.AllMovies.OrderBy(m => m.Title))
    {
        <input type="hidden" name="AllMovies[@i].ID" value="@movie.ID" />
        <input type="hidden" name="AllMovies[@i].Title" value="@movie.Title" />
        i++;
    }

    @{
        i = 0;
    }
    @foreach (var job in Model.AllJobs.OrderBy(j => j.Title))
    {
        <input type="hidden" name="AllJobs[@i].Id" value="@job.Id" />
        <input type="hidden" name="AllJobs[@i].Title" value="@job.Title" />
        i++;
    }

    @*Used to replicate movies and jobs drop down*@
    <select class="form-control" hidden="hidden" id="moviesDropDown">
        <option value="">Select Movie</option>
        @foreach (var movie in Model.AllMovies.OrderBy(m => m.Title))
        {
            <option value="@movie.ID">@movie.Title</option>
        }
    </select>

    <select class="form-control" hidden="hidden" id="jobTitlesDropDown">
        <option value="">Select Job Title</option>
        @foreach (var job in Model.AllJobs.OrderBy(j => j.Title))
        {
            <option value="@job.Id">@job.Title</option>
        }
    </select>

    <div id="movies">
    </div>

    <div class="col-md-10 offset-md-2">
        <input type="button" id="addMovie" value="Add Movie" class="btn btn-sm" />
    </div>
    <br />

    <div class="form-group">
        @Html.LabelFor(model => model.Profile.Bio, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Profile.Bio, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Profile.Bio, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Profile.ProfilePicture, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Profile.ProfilePicture, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Profile.ProfilePicture, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" value="Save" class="btn btn-default" />
        </div>
    </div>
</div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    @Scripts.Render("~/bundles/javascript")
}
