@model WorldwideMovieDatabase.Models.Profile

@{
    ViewBag.Title = "Edit";
}

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

<div class="form-horizontal">
    <h1>Edit Profile</h1>
    <hr />
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    @Html.HiddenFor(model => model.ID)

    <div class="form-group">
        @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.BirthDate, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.BirthDate, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.BirthDate, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.DeathDate, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.DeathDate, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.DeathDate, "", new { @class = "text-danger" })
        </div>
    </div>

    <h2>Movies</h2>
    <hr />
    @foreach (var jobTitle in Model.Movies.OrderBy(m => m.JobTitle)
                            .GroupBy(m => m.JobTitle)
                            .Select(m => m.First())
                            .Select(m => m.JobTitle))
    {
        <div class="form-group">
            <label class="control-label col-md-2" for="jobTitle">Job Title</label>
            <div class="col-md-10">
                @Html.EditorFor(model => jobTitle, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => jobTitle, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            <label class="control-label col-md-2" for="Movies">Movie Titles</label>
            <div class="col-md-10">
                <ul>
                @foreach (var movieJob in Model.Movies.Where(m => m.JobTitle == jobTitle))
                {

                    if (movieJob.JobTitle == jobTitle)
                    {
                        <li>@Html.DisplayFor(model => movieJob.Movie.Title)</li>
                    }
                }
                </ul>
            </div>
            <br />
        </div>
    }
        

        <h2>Add Movies</h2>
        <hr />

        <div id="movies">
        </div>

        <div class="col-md-10 offset-md-2">
            <input type="button" id="addMovie" value="Add Movie" class="btn btn-sm" />
        </div>
        <br />

        <div class="form-group">
            @Html.LabelFor(model => model.Bio, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Bio, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Bio, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ProfilePicture, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.ProfilePicture, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.ProfilePicture, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Save" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    @Scripts.Render("~/bundles/javascript")
}
