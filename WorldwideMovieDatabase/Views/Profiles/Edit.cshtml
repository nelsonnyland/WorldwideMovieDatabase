@model WorldwideMovieDatabase.Models.Profile

@{
    ViewBag.Title = "Edit";
}

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

<div class="form-horizontal">
    <h1>Edit Profile</h1>
    <hr />
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    @Html.HiddenFor(model => model.ID)

    <div class="form-group">
        @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.BirthDate, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.BirthDate, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.BirthDate, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.DeathDate, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.DeathDate, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.DeathDate, "", new { @class = "text-danger" })
        </div>
    </div>

    <h2>Movies</h2>
    <hr />
    @{
        int i = 0;
    }
    @foreach (var job in Model.Movies.SelectMany(m => m.Jobs)
                                .GroupBy(j => j.Title)
                                .Select(m => m.First()))

    {
        @*<input value="@job.Id" id="Movies[@i].MovieId" name="Movies[@i].MovieId" type="hidden" readonly>*@

        if (String.IsNullOrWhiteSpace(job.Title))
        {
            <h3>Unspecified Job Title</h3>
        }
        else
        {
            <h3>@job.Title</h3>
        }
        <div class="form-group">
            <div class="col-md-10">
                <ul>
                    @foreach (var movie in Model.Movies.Where(m => m.Jobs.Any(j => j.Title == job.Title)))
                    {
                        <li>
                            @*<input value="@movie.MovieProfileId" id="Movies[@i].MovieProfileId" name="Movies[@i].MovieProfileId"
                                   type="hidden" readonly>*@
                            @Html.DisplayFor(model => movie.Movie.Title)
                        </li>
                    }
                </ul>
            </div>
        </div>
        <br />
        i++;
    }

    <h2>Add Movies</h2>
    <hr />

    <div id="movies">
    </div>

    <div class="col-md-10 offset-md-2">
        <input type="button" id="addMovie" value="Add Movie" class="btn btn-sm" />
    </div>
    <br />

    <div class="form-group">
        @Html.LabelFor(model => model.Bio, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Bio, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Bio, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.ProfilePicture, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.ProfilePicture, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.ProfilePicture, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" value="Save" class="btn btn-default" />
        </div>
    </div>
</div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    @Scripts.Render("~/bundles/javascript")
}
